<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"

       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--扫描注解-->
    <context:component-scan base-package="com.zlm.controller, com.zlm.common"></context:component-scan>

    <!--如果直接在控制器的方法上面直接使用验证注解的话，必须加下面的配置-->
    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"></bean>

    <!--重要的配置 ！！！！ 时间日期的格式-->
    <mvc:annotation-driven conversion-service="convertorService" validator="validator">
        <!-- 处理json里的日期数据，默认日期被jackjson转为时间日期格式数据 -->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--设置自定义转换器类-->
    <bean id="convertorService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="com.zlm.convert.CustomerDateConvert"></bean>

            </list>
        </property>
    </bean>
    <!-- 配置资源文件 -->
    <bean id="hibernateMessages" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>
    <!-- 配置验证器 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
        <property name="validationMessageSource" ref="hibernateMessages"></property>
    </bean>

    <!--防止拦截静态资源-->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>

    <!-- 文件上传的解析器  id的值不能改-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 上传文件的最大大小 ，单位字节 ，比如 1024 * 1024 = 1M-->
        <property name="maxUploadSize" value="1048576"></property>

    </bean>

<!--    配置拦截器-->
    <mvc:interceptors>
        <!--        <mvc:interceptor>-->
        <!--&lt;!&ndash;            配置哪些资源需要被拦截&ndash;&gt;-->
        <!--&lt;!&ndash;            任意路径下面，后缀是.do的资源&ndash;&gt;-->
        <!--            <mvc:mapping path="/**/*.do"/>-->
        <!--&lt;!&ndash;            自定义的拦截器&ndash;&gt;-->
        <!--            <bean class="com.qfedu.interceptor.TimeInterceptor"></bean>-->
        <!--        </mvc:interceptor>-->
        <mvc:interceptor>
            <!--拦截所有资源-->
            <mvc:mapping path="/**"/>
            <!--除了js下面所有文件都拦截-->
            <mvc:exclude-mapping path="/js/**"/>
            <mvc:exclude-mapping path="/layui/**"/>
            <!--只要是login.do或者是login.html  不能被拦截-->
            <mvc:exclude-mapping path="/**/login.*"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/fonts/**"/>
            <mvc:exclude-mapping path="/images/**"/>
            <bean class="com.zlm.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>